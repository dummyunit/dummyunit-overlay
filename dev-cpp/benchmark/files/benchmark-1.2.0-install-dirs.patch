--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ foreach(p
   endif()
 endforeach()
 
+include(GNUInstallDirs)
+
 option(BENCHMARK_ENABLE_TESTING "Enable testing of the benchmark library." ON)
 option(BENCHMARK_ENABLE_EXCEPTIONS "Enable the use of exceptions in the benchmark library." ON)
 option(BENCHMARK_ENABLE_LTO "Enable link time optimisation of the benchmark library." OFF)
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -34,16 +34,22 @@ if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
   target_link_libraries(benchmark Shlwapi)
 endif()
 
-set(include_install_dir "include")
-set(lib_install_dir "lib/")
-set(bin_install_dir "bin/")
-set(config_install_dir "lib/cmake/${PROJECT_NAME}")
+set(include_install_dir "${CMAKE_INSTALL_INCLUDEDIR}")
+set(lib_install_dir "${CMAKE_INSTALL_LIBDIR}/")
+set(bin_install_dir "${CMAKE_INSTALL_BINDIR}/")
+set(config_install_dir "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
 
 set(generated_dir "${CMAKE_CURRENT_BINARY_DIR}/generated")
 
+if (BUILD_SHARED_LIBS)
 set(version_config "${generated_dir}/${PROJECT_NAME}ConfigVersion.cmake")
 set(project_config "${generated_dir}/${PROJECT_NAME}Config.cmake")
 set(targets_export_name "${PROJECT_NAME}Targets")
+else()
+set(version_config "${generated_dir}/${PROJECT_NAME}StaticConfigVersion.cmake")
+set(project_config "${generated_dir}/${PROJECT_NAME}StaticConfig.cmake")
+set(targets_export_name "${PROJECT_NAME}StaticTargets")
+endif()
 
 set(namespace "${PROJECT_NAME}::")
 

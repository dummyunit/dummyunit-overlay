diff -urN megaglest-source-3.4.0.old/CMakeLists.txt megaglest-source-3.4.0/CMakeLists.txt
--- megaglest-source-3.4.0.old/CMakeLists.txt	2011-02-02 23:08:57.000000000 +0300
+++ megaglest-source-3.4.0/CMakeLists.txt	2011-02-19 03:55:37.557557386 +0300
@@ -134,14 +134,13 @@
 	   
 ADD_SUBDIRECTORY( source/shared_lib )
 ADD_SUBDIRECTORY( source/glest_game )
-#if(wxWidgets_FOUND)
-  ADD_SUBDIRECTORY( source/glest_map_editor )
-  ADD_SUBDIRECTORY( source/g3d_viewer )
-  ADD_SUBDIRECTORY( source/configurator )
-#else()
-#  MESSAGE(STATUS "WARNING... the following game tools will NOT be built since we cannot find wxWidgets on this machine")
-#  MESSAGE(STATUS "map editor, g3d viewer, configurator")
-#endif()
+
+OPTION(BUILD_EDITOR "build editor" ON)
+IF(BUILD_EDITOR)
+	ADD_SUBDIRECTORY( source/glest_map_editor )
+	ADD_SUBDIRECTORY( source/g3d_viewer )
+ENDIF()
+
 ADD_SUBDIRECTORY( source/tools/glexemel )
 
 IF(APPLE)
diff -urN megaglest-source-3.4.0.old/source/glest_game/ai/ai_interface.h megaglest-source-3.4.0/source/glest_game/ai/ai_interface.h
--- megaglest-source-3.4.0.old/source/glest_game/ai/ai_interface.h	2011-01-20 17:56:20.000000000 +0300
+++ megaglest-source-3.4.0/source/glest_game/ai/ai_interface.h	2011-02-19 03:47:48.437062530 +0300
@@ -95,7 +95,10 @@
 	bool isFreeCells(const Vec2i &pos, int size, Field field);
 
 private:
-	string getLogFilename() const	{return "ai"+intToStr(factionIndex)+".log";}
+	string getLogFilename() const
+	{
+		return string(getenv("HOME")) + "/.megaglest/ai" + intToStr(factionIndex) + ".log";
+	}
 	bool executeCommandOverNetwork();
 };
 
diff -urN megaglest-source-3.4.0.old/source/glest_game/main/main.cpp megaglest-source-3.4.0/source/glest_game/main/main.cpp
--- megaglest-source-3.4.0.old/source/glest_game/main/main.cpp	2011-02-01 00:56:38.000000000 +0300
+++ megaglest-source-3.4.0/source/glest_game/main/main.cpp	2011-02-19 03:47:48.438062700 +0300
@@ -1408,6 +1408,15 @@
 }
 
 int glestMain(int argc, char** argv) {
+	if (!getenv("HOME"))
+		throw runtime_error("HOME external variable is not set");
+  
+	char path[PATH_MAX];
+	snprintf(path, PATH_MAX, "%s/.megaglest", getenv("HOME"));
+	mkdir(path, 0750);
+    
+	chdir("@GENTOO_DATADIR@");
+
 #ifdef SL_LEAK_DUMP
 	AllocRegistry memoryLeaks = AllocRegistry::getInstance();
 #endif
diff -urN megaglest-source-3.4.0.old/source/glest_game/main/program.cpp megaglest-source-3.4.0/source/glest_game/main/program.cpp
--- megaglest-source-3.4.0.old/source/glest_game/main/program.cpp	2011-01-29 21:50:34.000000000 +0300
+++ megaglest-source-3.4.0/source/glest_game/main/program.cpp	2011-02-19 03:47:48.438062700 +0300
@@ -488,10 +488,7 @@
 
     //log start
 	Logger &logger= Logger::getInstance();
-	string logFile = "glest.log";
-    if(getGameReadWritePath(GameConstants::path_logs_CacheLookupKey) != "") {
-        logFile = getGameReadWritePath(GameConstants::path_logs_CacheLookupKey) + logFile;
-    }
+	string logFile = string(getenv("HOME")) + "/.megaglest/glest.log";
 	logger.setFile(logFile);
 	logger.clear();
 
diff -urN megaglest-source-3.4.0.old/source/shared_lib/sources/util/leak_dumper.cpp megaglest-source-3.4.0/source/shared_lib/sources/util/leak_dumper.cpp
--- megaglest-source-3.4.0.old/source/shared_lib/sources/util/leak_dumper.cpp	2011-01-20 17:54:50.000000000 +0300
+++ megaglest-source-3.4.0/source/shared_lib/sources/util/leak_dumper.cpp	2011-02-19 03:47:48.438062700 +0300
@@ -43,7 +43,7 @@
 
 AllocRegistry::~AllocRegistry(){
 
-	dump("leak_dump.log");
+	dump(string(getenv("HOME")) + "/.megaglest/leak_dump.log");
 }
 
 void AllocRegistry::allocate(AllocInfo info){
diff -urN megaglest-source-3.4.0.old/source/shared_lib/sources/util/profiler.cpp megaglest-source-3.4.0/source/shared_lib/sources/util/profiler.cpp
--- megaglest-source-3.4.0.old/source/shared_lib/sources/util/profiler.cpp	2011-01-20 17:54:50.000000000 +0300
+++ megaglest-source-3.4.0/source/shared_lib/sources/util/profiler.cpp	2011-02-19 03:47:48.438062700 +0300
@@ -72,10 +72,7 @@
 Profiler::~Profiler(){
 	rootSection->stop();
 
-    string profileLog = "profiler.log";
-    if(getGameReadWritePath(GameConstants::path_logs_CacheLookupKey) != "") {
-        profileLog = getGameReadWritePath(GameConstants::path_logs_CacheLookupKey) + profileLog;
-    }
+    string profileLog = string(getenv("HOME")) + "/.megaglest/profiler.log";
 	FILE *f= fopen(profileLog.c_str(), "w");
 	if(f==NULL)
 		throw runtime_error("Can not open file: " + profileLog);
diff -urN megaglest-source-3.4.0.old/source/shared_lib/sources/util/properties.cpp megaglest-source-3.4.0/source/shared_lib/sources/util/properties.cpp
--- megaglest-source-3.4.0.old/source/shared_lib/sources/util/properties.cpp	2011-01-20 17:54:50.000000000 +0300
+++ megaglest-source-3.4.0/source/shared_lib/sources/util/properties.cpp	2011-02-19 03:47:48.438062700 +0300
@@ -14,6 +14,8 @@
 #include <fstream>
 #include <stdexcept>
 #include <cstring>
+#include <limits.h>
+#include <stdlib.h>
 
 #include "conversion.h"
 #include "util.h"
@@ -38,10 +40,15 @@
 
     //SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] path = [%s]\n",__FILE__,__FUNCTION__,__LINE__,path.c_str());
 
-	fileStream.open(path.c_str(), ios_base::in);
+	char str[PATH_MAX];
+	snprintf(str, PATH_MAX, "%s/.megaglest/%s", getenv("HOME"), path.c_str());
+	fileStream.open(str, ios_base::in);
 	if(fileStream.fail()){
-	    SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] path = [%s]\n",__FILE__,__FUNCTION__,__LINE__,path.c_str());
-		throw runtime_error("Can't open propertyMap file: " + path);
+		fileStream.open(path.c_str(), ios_base::in); // use defaults
+		if(fileStream.fail()){
+			SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] path = [%s]\n",__FILE__,__FUNCTION__,__LINE__,path.c_str());
+			throw runtime_error("Can't open propertyMap file: " + path + " cwd: "+ getenv("PWD"));
+		}
 	}
 
     //SystemFlags::OutputDebug(SystemFlags::debugSystem,"In [%s::%s Line: %d] path = [%s]\n",__FILE__,__FUNCTION__,__LINE__,path.c_str());
@@ -78,7 +85,9 @@
 void Properties::save(const string &path){
 	ofstream fileStream;
 
-	fileStream.open(path.c_str(), ios_base::out | ios_base::trunc);
+	char str[PATH_MAX];
+	snprintf(str, PATH_MAX, "%s/.megaglest/%s", getenv("HOME"), path.c_str());
+	fileStream.open(str, ios_base::out | ios_base::trunc);
 
 	fileStream << "; === propertyMap File === \n";
 	fileStream << '\n';
